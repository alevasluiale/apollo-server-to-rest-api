/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/confirm-account": {
    get: operations["confirmUserAccount"];
    post: operations["confirmUserAccount_1"];
  };
  "/users/deleteUser": {
    put: operations["deleteUser"];
  };
  "/restaurants/deleteRestaurant": {
    put: operations["deleteRestaurant"];
  };
  "/meals/deleteMeal": {
    put: operations["deleteMeal"];
  };
  "/users/updateUser": {
    post: operations["updateUser"];
  };
  "/users/blockUser": {
    post: operations["blockUser"];
  };
  "/users/addUser": {
    post: operations["addUser"];
  };
  "/restaurants/updateRestaurant": {
    post: operations["updateRestaurant"];
  };
  "/restaurants/addRestaurant": {
    post: operations["addRestaurant"];
  };
  "/orders/updateOrderStatus": {
    post: operations["updateOrderStatus"];
  };
  "/orders/addOrder": {
    post: operations["addOrder"];
  };
  "/meals/updateMeal": {
    post: operations["updateMeal"];
  };
  "/meals/addMeal": {
    post: operations["addMeal"];
  };
  "/auth/signup": {
    post: operations["registerUser"];
  };
  "/auth/signin": {
    post: operations["authenticateUser"];
  };
  "/auth/facebook-signIn": {
    post: operations["signInWithFacebook"];
  };
  "/auth/authenticate": {
    post: operations["checkIfUserIsStillLoggedIn"];
  };
  "/users/getAll": {
    get: operations["getAllUsers"];
  };
  "/restaurants/getAll": {
    get: operations["getAllRestaurants"];
  };
  "/restaurants/getAllForOwner": {
    get: operations["getAllRestaurantsOfOwner"];
  };
  "/orders/getAll": {
    get: operations["getAllOrders"];
  };
  "/orders/getAllForUser": {
    get: operations["getAllForUser"];
  };
  "/orders/getAllForOwner": {
    get: operations["getAllForOwner"];
  };
  "/meals/getAll": {
    get: operations["getAllMeals"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UpdateUserRequest: {
      username?: string;
      email?: string;
      role?: string;
      /** Format: int64 */
      id: number;
      password?: string;
    };
    SignupRequest: {
      username: string;
      email: string;
      password: string;
      role?: string;
    };
    RestaurantRequest: {
      name?: string;
      description?: string;
      mealsIds?: (number)[];
    };
    OrderStatusRequest: {
      /** Format: int64 */
      orderId?: number;
      status?: string;
    };
    MealRequest: {
      name?: string;
      description?: string;
      /** Format: double */
      price?: number;
      /** Format: int64 */
      id?: number;
      /** Format: int32 */
      quantity?: number;
    };
    OrderRequest: {
      meals?: (components["schemas"]["MealRequest"])[];
      /** Format: date-time */
      date?: string;
      /** Format: int64 */
      restaurantId?: number;
      /** Format: int64 */
      userId?: number;
      /** Format: double */
      totalAmount?: number;
    };
    LoginRequest: {
      username: string;
      password: string;
    };
    FacebookRequest: {
      username?: string;
      photoUrl?: string;
      email?: string;
      accessToken?: string;
    };
    Role: {
      /** Format: int64 */
      id?: number;
      name?: components["schemas"]["RoleEnum"];
    };
    /** @enum {string} */
    RoleEnum: "ROLE_USER" | "ROLE_OWNER" | "ROLE_ADMIN";
    UsersInfoResponse: {
      /** Format: int64 */
      id?: number;
      username?: string;
      email?: string;
      photoUrl?: string;
      roles?: (components["schemas"]["Role"])[];
      blocked?: boolean;
    };
    Meal: {
      /** Format: int64 */
      id?: number;
      name: string;
      description: string;
      /** Format: double */
      price: number;
    };
    RestaurantResponse: {
      name?: string;
      /** Format: int64 */
      id?: number;
      description?: string;
      meals?: (components["schemas"]["Meal"])[];
    };
    OrderMealResponse: {
      /** Format: int32 */
      quantity?: number;
      meal?: components["schemas"]["Meal"];
    };
    OrderResponseNoRestaurant: {
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      date?: string;
      restaurants?: (components["schemas"]["Rest"])[];
      orderStatuses?: (components["schemas"]["OrderStatusResponse"])[];
      orderMeals?: (components["schemas"]["OrderMealResponse"])[];
      /** Format: double */
      totalAmount?: number;
    };
    OrderStatusResponse: {
      /** Format: date-time */
      date?: string;
      status?: components["schemas"]["Status"];
    };
    Rest: {
      name?: string;
    };
    Status: {
      /** Format: int64 */
      id?: number;
      name?: components["schemas"]["StatusEnum"];
    };
    /** @enum {string} */
    StatusEnum: "PLACED" | "CANCELED" | "PROCESSING" | "IN_ROUTE" | "DELIVERED" | "RECEIVED";
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  confirmUserAccount: {
    parameters: {
      query: {
        token: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  confirmUserAccount_1: {
    parameters: {
      query: {
        token: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteUser: {
    parameters: {
      query: {
        userId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteRestaurant: {
    parameters: {
      query: {
        restaurantId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteMeal: {
    parameters: {
      query: {
        mealId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateUser: {
    parameters: {
      query: {
        userId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  blockUser: {
    parameters: {
      query: {
        userId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignupRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateRestaurant: {
    parameters: {
      query: {
        restaurantId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RestaurantRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addRestaurant: {
    parameters: {
      query: {
        userId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RestaurantRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateOrderStatus: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderStatusRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addOrder: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateMeal: {
    parameters: {
      query: {
        mealId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MealRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addMeal: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MealRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  registerUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignupRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  authenticateUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  signInWithFacebook: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FacebookRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  checkIfUserIsStillLoggedIn: {
    requestBody: {
      content: {
        "application/json": string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getAllUsers: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["UsersInfoResponse"])[];
        };
      };
    };
  };
  getAllRestaurants: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["RestaurantResponse"])[];
        };
      };
    };
  };
  getAllRestaurantsOfOwner: {
    parameters: {
      query: {
        userId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["RestaurantResponse"])[];
        };
      };
    };
  };
  getAllOrders: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["OrderResponseNoRestaurant"])[];
        };
      };
    };
  };
  getAllForUser: {
    parameters: {
      query: {
        userId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["OrderResponseNoRestaurant"])[];
        };
      };
    };
  };
  getAllForOwner: {
    parameters: {
      query: {
        userId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["OrderResponseNoRestaurant"])[];
        };
      };
    };
  };
  getAllMeals: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["Meal"])[];
        };
      };
    };
  };
}
